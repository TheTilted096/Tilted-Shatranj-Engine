/*
Position Class, intermediate object
for Tilted Shatranj Engine

Contains move generation and static position attributes

TheTilted096, 7-19-24

*/

#include "STiltedBitboards.h"

class Position : public Bitboards{
    public:
        uint32_t moves[96][128];
        int mprior[96][128];

        int scores[2], eScores[2];
        int mobil[2], emobil[2];
        int thm, chm[1024];
        uint64_t zhist[1024];
        
        int historyTable[2][6][64];
        int historyCap = 1048576;
        int inGamePhase;

        Bitboard atktbl[2][5];

        uint64_t nodes;

        static constexpr int totalGamePhase = 64;
        static constexpr int phases[6] = {0, 6, 4, 2, 1, 1};
        static constexpr int matVals[6] = {0, 650, 400, 200, 150, 100};

        //Zobrist Hashing
        static constexpr uint64_t zpk[2][6][64] =
        {{{0xEF0D405AE1B4F355ULL, 0x742F5CAF3729D2B3ULL, 0x314A5EBE2148A6DFULL, 0xDA7DFD3B4A3E035ULL, 
        0xBABF6C0C197F4575ULL, 0xF763449827C656EFULL, 0x5DA8D62D3D300DCEULL, 0x4D15796C127D307BULL, 
        0xACEED159781EABF1ULL, 0x6CB1ACA2E19B132BULL, 0xB852F5C71469F870ULL, 0x321B7B20300817D4ULL, 
        0x47C294968241B094ULL, 0x883B7D2D0D2ACAE5ULL, 0xD551F028C11CC18DULL, 0xADEC42D271B14889ULL, 
        0xD724F9B58695D3F1ULL, 0x54F732EE199BC7C8ULL, 0xCE46D614C664D00BULL, 0xFF49CF1401B47EF2ULL, 
        0x3BF46C721357F522ULL, 0x3882FE9304FECE38ULL, 0x40A5D93DCE73ADCDULL, 0x8DDF5FE5D7AE49F2ULL, 
        0x51F36CD2275E54AEULL, 0xF380CC5A35C67AF1ULL, 0x58238C33B7C0578DULL, 0x1F705A8D05F0435BULL, 
        0xACD844BE94A11DA5ULL, 0x5AD7809B66D3A2FCULL, 0xAE4C19849A365BB2ULL, 0x2F235E6838B128A6ULL, 
        0x8416A44677C5061FULL, 0xDDB58E15AD885074ULL, 0x8EA80B05AFB14DBBULL, 0x6D452335E23BD700ULL, 
        0xE0025F6AA9595B0CULL, 0xF73ABCAAB96BE912ULL, 0x46DCFD3AA7703BB0ULL, 0xE2BA743CE8F8C648ULL, 
        0x9A0B9FE7C2CE05D5ULL, 0x34F077E1554C0F6DULL, 0x1D1736654F478F30ULL, 0x55293458C0D3F266ULL, 
        0xB389317BBDB539DEULL, 0xDFECF0F8B36532DBULL, 0xF00DAF1C098AF5E0ULL, 0xB1A75BD09EB137B4ULL, 
        0x31176A56D8563F68ULL, 0xD5A50246DBAF5009ULL, 0x90AF21FA835D97C1ULL, 0x928AC1124A10FB4FULL, 
        0x390B8F29C3EF2D3CULL, 0x66B547D0BF595A72ULL, 0xF25FDC3D62505276ULL, 0x6D3804D8834B60D4ULL, 
        0x4DF92A317E194A8BULL, 0x21B901C739E6CE51ULL, 0x124E3C0C01594B2DULL, 0xE8978D7A6426624EULL, 
        0xFC3BD55E50E0C44ULL, 0x3E882F4CA37255BFULL, 0xB2CAC258CADC3B01ULL, 0xCBC40C849C398AEBULL}, {
        0x3A53BD524F68FB8DULL, 0x374D84F3EFF439A4ULL, 0xBC1AB29B37B941B2ULL, 0x9B57E989B610F454ULL, 
        0x242036A233E1ABC7ULL, 0xD0D1BC69C2E95667ULL, 0x9403A3F79DA82B5ULL, 0x305A946B8BCEABDDULL, 
        0x361BB796EB7CA0AEULL, 0x602D1F6D3988D32CULL, 0xDB5EFA81EB455310ULL, 0x7846A39795307A2EULL, 
        0x8EDE913B27683B4AULL, 0x5E536F7E551C1CA2ULL, 0xF814BEC6D35E7AD2ULL, 0x82129D310A9DFD4DULL, 
        0xABA70F6EECB03BF9ULL, 0x4E823108AA365D61ULL, 0x9F75405F4FDA5780ULL, 0x4DFC4C5716C1D88DULL, 
        0xDEA3B4F2773069AAULL, 0xB6AB3669E52562B4ULL, 0xA7560CAFC1CA01ECULL, 0x955D4D33222B5C9ULL, 
        0x750ABF0252F78BCDULL, 0xE1B951173D3EB882ULL, 0xCC8352B421BF2E37ULL, 0x810A75083695B90AULL, 
        0xC7F51B95C622B0ULL, 0xE1616B6AEC7CEDEAULL, 0x19780A7A7CE80C73ULL, 0xC8747EDA56F654A0ULL, 
        0x864AB2C990CF0779ULL, 0xAF39A7FA29225D56ULL, 0xC25B61C0851E8FB7ULL, 0x78EE4C6D3F1BEA50ULL, 
        0x98176AD8D2387BABULL, 0x60A1CB3C16F8119FULL, 0x780B70D484D3E721ULL, 0x180BE304C8803742ULL, 
        0x4CE4A81C0FCE8AEFULL, 0x27026CC789359FFBULL, 0x7F2014C41CF5BF88ULL, 0xF31BDBBDA12A1E7CULL, 
        0x3947D64FECD97462ULL, 0xF3A6AB1516C97557ULL, 0x63EF246B2D20CA50ULL, 0xFB470CE5322E2BCULL, 
        0x2FD261B6A8FC0C4CULL, 0x249D01CF44F77AF9ULL, 0x704F201539289C58ULL, 0xC2018513C6FC6D08ULL, 
        0x4EF7A739871C9736ULL, 0xDA70AFC26FBB3C08ULL, 0xB9997C7568358307ULL, 0xE4278ADAE86BBCAULL, 
        0x2690E5A507BF32D6ULL, 0xD91C6A6A841C9317ULL, 0x3AE68F29C480FDDFULL, 0xA4AD4F1D350889C0ULL, 
        0x922F070F836AC6BEULL, 0xCAC23813D6B0842CULL, 0x374C48A4B52D474DULL, 0x7E99259FDDC04888ULL}, {
        0xBEC55CEFDE737F4AULL, 0x90ED4961214E4AACULL, 0x908A7855B50EB815ULL, 0x7ADEBAEB77FBF7C0ULL, 
        0xC31D0E0471C828C8ULL, 0xE712A942E659BF43ULL, 0x64C00E650C17D672ULL, 0xDDD374CB8F64C8BAULL, 
        0xA29B8DD94462819EULL, 0x19DF8DFFBC27EB81ULL, 0x861C04D9CB0BD604ULL, 0x4A77407445D10158ULL, 
        0xBCEE76BF18E5AD81ULL, 0x2729610305FAB257ULL, 0x237F1BF9F3D0112EULL, 0xE1C8FCB73A2CC685ULL, 
        0x67EA125F2D53945ULL, 0x61D4DE90DC9907EAULL, 0xFF4BB20B799A0E56ULL, 0x3A92567B939689BCULL, 
        0x3B585ADD5903750FULL, 0xB189DF7795A94309ULL, 0xDCEDA51C984F2CECULL, 0x1D3432CF1A890409ULL, 
        0x3D308E51F81AC4CFULL, 0x321A0872E8F4E543ULL, 0xFBDCB57E2EA4191ULL, 0x93AC04491E47604FULL, 
        0x7F979976B28224D0ULL, 0x414DC2CB52CBEFE6ULL, 0xCE8CB7C72D25775ULL, 0xF53D3D8D0DF05E27ULL, 
        0xE0ED64DFB08C15FEULL, 0x95533B9319EAE7C7ULL, 0xB441D2802F248686ULL, 0xEBAC893FF6A2C0E2ULL, 
        0x60671DFDF6A5391CULL, 0xF9F1E6174CEF01C5ULL, 0xF4DCD488B34FA951ULL, 0x61F53BEFAB298C2CULL, 
        0x4DF4F1BFAEE836C5ULL, 0x785BF401C8A77313ULL, 0x3BE7E37FA6F6A4ECULL, 0xF017AB08F1BE3634ULL, 
        0xC8CB368AC72D7FA7ULL, 0x3FCB7273C4CD8F01ULL, 0xE64E8FA94364124ULL, 0x37567D5A86DC0150ULL, 
        0x56B389ACA7DEAEBULL, 0x1B63CA64521F63D4ULL, 0xFBF0BEB992E417BAULL, 0xF921967096210C73ULL, 
        0x8187842502E7D808ULL, 0x70348523C2D6B186ULL, 0xDD1673741804F71ULL, 0x3CD6AC93C7FD9079ULL, 
        0x9AE80300DB5989B0ULL, 0x4D295DAFACEF00CCULL, 0x4AF2B65230264BE4ULL, 0x5D66B8BB4EC3ABFCULL, 
        0x3C5B7564A651B354ULL, 0xA74D7972FFD63313ULL, 0xEBC9F4313044CCDDULL, 0x6846023DDDB26A57ULL}, {
        0x9626600D1231A5A6ULL, 0x967797FD2B7E519ULL, 0x9346E23271304E9DULL, 0x95FD3ADA3F011703ULL, 
        0xB485F90040F83AF6ULL, 0x77DB51DAE3C5C019ULL, 0x616E9BD6B1ADE282ULL, 0xD0E8B0B543F76AEBULL, 
        0x82FE5DFE0F3E135EULL, 0xF5D5BCCF0BAC869FULL, 0x3831260ADF4F2795ULL, 0xE75A4B6436F1085DULL, 
        0x6D50C77937CE2965ULL, 0xECD80E40182D2982ULL, 0x730FC4441CCE58B8ULL, 0x968A1D9182806B09ULL, 
        0xDB49455B2E9D37E1ULL, 0x3312FFB0B61C227CULL, 0x38C93BC13FBDC34ULL, 0x4334813B03AE22D1ULL, 
        0x70E73C4F99E3A0F6ULL, 0x2AD503C21D528565ULL, 0xD5F78526B7A2B001ULL, 0xB80EF4947F0AEEEFULL, 
        0x9F2C58FAD2D00ADEULL, 0xBB4582DB6C7274B4ULL, 0x866BA1F6F85F7C3AULL, 0xC6D182D2754CABD7ULL, 
        0xB8DC7554F95FCF5FULL, 0x6E105AEC982DBA33ULL, 0xEDD4B101DBFF942AULL, 0xA85FD952FD8388EEULL, 
        0x3D0498C2F79913D2ULL, 0x844727DD891EC6D9ULL, 0x207C134E50D7FDA0ULL, 0xCEDE9F71F257EE2ULL, 
        0xA83C52FADDF69748ULL, 0x60A05BF4B3360D6DULL, 0x994A66B96303EE3DULL, 0x9B27EE61FC5F1932ULL, 
        0x230144E8C88B3100ULL, 0xD8BC20EFB036E6B8ULL, 0x3319C8A08A04D2A2ULL, 0x1F3B24C9366657BBULL, 
        0x68B7780A08BB101CULL, 0x6DE1A2250D789A2ULL, 0x965FA278405555E7ULL, 0xC1D97DB507EDE66ULL, 
        0xC8160C0890B3EF34ULL, 0x2C32FD7363758E31ULL, 0x21A6EC0E8FA5FF75ULL, 0x7820FEB2450660D5ULL, 
        0x90E095A3A4088249ULL, 0x1AE1E4E57ED93F3CULL, 0xAE3BCD504C93A9B6ULL, 0x8BA2AA53B5D81022ULL, 
        0x10DE5CF09183DFCAULL, 0xE18C0159BD56D920ULL, 0xDCDD1125B06F572FULL, 0xFDED6ABF8E9A6B1ULL, 
        0x893E861166D9283CULL, 0x31FB0F562C30B7A3ULL, 0x109EA6DF6DDB6E3EULL, 0x8C604628BD95E9FFULL}, {
        0x2CC6EBF105011094ULL, 0x4EE934CFD62A3987ULL, 0x3507A5DF0AD6D188ULL, 0x93BF82F84A16F549ULL, 
        0x13E4DC61DD01A7EAULL, 0x68CAAB3713DBB140ULL, 0x88146545467E286ULL, 0xC6949E824BF8EC9DULL, 
        0x3756A40667990C0AULL, 0xC14FD3E1D7810693ULL, 0xF9A298B83CC85C10ULL, 0x5AFBAFBEEC1C0941ULL, 
        0xC89AE147D7781B78ULL, 0x99255DC0CFC02FE1ULL, 0xA93271A25C3252B7ULL, 0x1A482567CD530E5AULL, 
        0x8EA264478F5E29BCULL, 0x99785791F7F54209ULL, 0x60D6987C24D2E15DULL, 0xD1BF4436AD29DF0FULL, 
        0xD1D949B1F07F8803ULL, 0x51496C11A5BFDF4AULL, 0x65FF7D1439EB0BB4ULL, 0xC14A7FA3D8BF6228ULL, 
        0x5004FCF3521F5383ULL, 0xD5CF714CF00339ULL, 0x9B667ABEF7ED3080ULL, 0x19764E7BF9F91F62ULL, 
        0xDE5B9F3DC943CC1FULL, 0xDFBDFA1D53BEF90EULL, 0xE4EAA1672BD5B4BFULL, 0xDABD8AF33F67B259ULL, 
        0x8F94C8130FB806E3ULL, 0x3331BB761F6CC341ULL, 0x7253F4D77E43E915ULL, 0x92C7C937FC621193ULL, 
        0xE875BB2B74365435ULL, 0xFD57322C14D7977CULL, 0x6C079355A7EF5077ULL, 0xC6E3EBD79B257ED5ULL, 
        0x593D87A8CB92AC2AULL, 0xADAA8F4E7555B784ULL, 0x76F5C305E50CAF80ULL, 0xC987C4660224A29ULL, 
        0xADFC548DF242DA44ULL, 0xA924BD221A722566ULL, 0x4A4661F78BAEE09FULL, 0xA9EED566E28395BCULL, 
        0x7D964B0778F524B7ULL, 0xEBDCFC04436AB2C0ULL, 0x8E923A417060A18EULL, 0x2BC3D02B792470BEULL, 
        0x9C3DFF2E2321E9D5ULL, 0x4CB56A9BEC9A5BBBULL, 0x94AD42A8D3CE1F0AULL, 0x79FC30BF7F80E069ULL, 
        0x459D0BB8D83CDDACULL, 0xB38B57CB48253FDFULL, 0xB9D507D1BD0E6B86ULL, 0xA7837792986C567AULL, 
        0xFADF13A6472C150BULL, 0x200F73DF2C6F1718ULL, 0xBE20B06039B9FE28ULL, 0x6A7A24DA77DED907ULL}, {
        0x5C97C8FC7A96D82BULL, 0xF5F6F1704893E717ULL, 0x337B6ACE00915305ULL, 0x34BAC4F4630EBFD5ULL, 
        0x193D28FA14370C24ULL, 0x45BA899F34D6CF39ULL, 0xAEB3C1EBF6F46FEFULL, 0x24754C4D48472CA8ULL, 
        0x9ADB229C68895D88ULL, 0xDEF74A68004B3AD1ULL, 0x61DAB6DB274991A7ULL, 0xF605E673C683F3E0ULL, 
        0x628237D3F808628FULL, 0x2FC2B8507C0ECAF2ULL, 0xD79DE14711FDC8A4ULL, 0x1E5F940662AF1788ULL, 
        0x7BEBB76392E25FABULL, 0xCD8867438C0FA664ULL, 0xC8D5217BAF3480F8ULL, 0xDDE6DFD899A3314ULL, 
        0x193C34447FB7E8DEULL, 0x5A2794F8361BB696ULL, 0xE5B8D5908EE8424DULL, 0xC8EAC51BFA9A8A02ULL, 
        0x90BC6DD608D996D9ULL, 0x4FF80384E9317996ULL, 0x15F9AF4CB6405635ULL, 0x6F6A356090418EABULL, 
        0x88C9270601A7C5EFULL, 0x527D754D4B4B2BC3ULL, 0xDFC22C92D1F3C221ULL, 0x6EE0F61C2137E0A8ULL, 
        0xE550453C393AD894ULL, 0x5B96A15198D41F98ULL, 0xDD245A5B98ABCE6AULL, 0x5305C48B01EDE325ULL, 
        0xB64066AF648B7CEFULL, 0x5578F2E1BE74770FULL, 0xCAEE126A16E9A1BEULL, 0xA13C842395567E08ULL, 
        0xB19AE4423EB382ADULL, 0x632F6FD2D9EBF1D3ULL, 0x81B7343D9DC43CA9ULL, 0xFFCDC4FC2DE9581BULL, 
        0x95E662616AD5A80FULL, 0xEF4623E20DF844C9ULL, 0x17D4C16CD3F5FED0ULL, 0x64E01833588B64E6ULL, 
        0x637861E9446EC7C3ULL, 0x5E0A8FF04101538ULL, 0xEA9012745BDFEAD3ULL, 0x4FA6955446332CCBULL, 
        0x8A657497B7E58FB4ULL, 0x90A55583E10D268FULL, 0x7CE2BE358317CFA0ULL, 0x22F6545A3C6AD07CULL, 
        0xA14EF979C88EA708ULL, 0xC79979674134CE96ULL, 0x1C962B531A20512EULL, 0xF2C480E486798041ULL, 
        0xABEFF00EF25EE3AFULL, 0xE5D3E2F78F086BA0ULL, 0xE47300AD310371B7ULL, 0x8A8F70622D07CE38ULL}}, {{
        0xEE70BC247984F60CULL, 0x5DB2750696B720F5ULL, 0x5F7563C652CCEECCULL, 0x97B49C4EF029099BULL, 
        0x9AC8BC8ABE9DBDFAULL, 0x93821B2FF3956F99ULL, 0x43F340017EE8965DULL, 0x7438723349503975ULL, 
        0xCEC0C3A405210B47ULL, 0x872D9EAC41C9CC9AULL, 0x19F00CA295E8F68BULL, 0x1C02DBA002E7CEE0ULL, 
        0x272CD7A83F31F69CULL, 0x36982366EE8479D9ULL, 0x8E5019585D98894FULL, 0xFD18F9C670024C79ULL, 
        0x327A9EA29C8D9E28ULL, 0x75D2FA0EC19E92A9ULL, 0x55DB516888B21BCFULL, 0x528E0CFE27680D07ULL, 
        0xA045BFE96CB9D919ULL, 0x9A74C04DF85F3DA9ULL, 0xBF61A52CB16FF709ULL, 0x1DFB1F8D0D49338EULL, 
        0xC37E6422F4BC2B61ULL, 0x1E4756ED4A43A039ULL, 0x898D05A6E5A717BCULL, 0x706BE965876E158CULL, 
        0xB2FC72405A9EC035ULL, 0x6746D7A7A0B6D4A1ULL, 0xF75F2B62303EEA01ULL, 0xAB3524D55698B4B4ULL, 
        0xFE1A7E5F7F8FE6ACULL, 0xB784C934E8133443ULL, 0xDCCAFDF19E7BA93BULL, 0x7DE7D3F0F72B8265ULL, 
        0x3663108927537CA0ULL, 0x859FD6B17D0BDC80ULL, 0x5E0C4D6A17D5693FULL, 0x9B91C813EBA07F08ULL, 
        0x605D5B853D8437ACULL, 0x9DEBF4E6CD0573CEULL, 0x98715EF36CECD625ULL, 0x9C46D03E5149330CULL, 
        0xCAD3486EB8E87EF0ULL, 0x293266F2A099F2CAULL, 0xD6002329B6E8E3A8ULL, 0x14CAE8CCD02817F0ULL, 
        0x5D80824F626F1E39ULL, 0x78F24331AD91B317ULL, 0x341ED5AABEEBC10DULL, 0x202F4D8DADF4C7AAULL, 
        0xC0FAA64B5F7F8399ULL, 0x43769B82EBF76916ULL, 0x6F39B2A1EF3CF840ULL, 0x3B11002A24DF01D9ULL, 
        0x2272F11F2050F7AFULL, 0xE8D27D90AFCBEC28ULL, 0x82202E9E506A745DULL, 0xA6B2525E14902014ULL, 
        0xA3C811718D7B2BE7ULL, 0xFC4A50A6CE949713ULL, 0x594F9E5E11A5D58FULL, 0xB34E937227EB46BDULL}, {
        0x6E9966AE08A04A5BULL, 0xA197D7931B220DF1ULL, 0x74A408EF9EBDE8DFULL, 0xE79C1B5361E73785ULL, 
        0x171BCC0D9B217115ULL, 0x31EF295DB6A3B63BULL, 0x4BC9F57887CCE0B4ULL, 0x4BAB868417A07D4BULL, 
        0x7767D1BCBFBF64A2ULL, 0xACF002E366FDC49EULL, 0xA29FD51968AE09FBULL, 0x66EA81B5F0ECE2CCULL, 
        0x6A5BCA49850AC4F3ULL, 0x36EB114F68EDEFAEULL, 0x24FE8EE42235307ULL, 0xD7D146CE3A8FB4E6ULL, 
        0xC681751DA660F3D6ULL, 0x48BD928F1C030EE2ULL, 0xD4BAFE36E88DDF37ULL, 0xA84ED907855A9CAULL, 
        0xA208A41505A44E34ULL, 0x3AC53017FB3643A6ULL, 0xCD32C419B299C744ULL, 0xAA36818C8C0F969BULL, 
        0xC089BA430D73C0C5ULL, 0x9D6CD2E30E03359ULL, 0x3C459BC999DF493FULL, 0xD3F9E1E6ED915F26ULL, 
        0xD8963C85743B79F1ULL, 0x31A8CEE9125A3C43ULL, 0x8BD38D8DB01C19C7ULL, 0xBB525F39857D1BE9ULL, 
        0x8578F1E622890F78ULL, 0x88601591EB553B12ULL, 0x3BB4F27604B58533ULL, 0x76D12E8236EDEDF5ULL, 
        0x2508010D8F9131E7ULL, 0xE2E95331FE5AA4E1ULL, 0x7B72982740908989ULL, 0xEC965710DDA449C4ULL, 
        0x9C725FD7F3E6A14CULL, 0xDEFE161015D7F3E0ULL, 0xDC1C2FF16C5738B7ULL, 0xBAB5B5B05F6E189AULL, 
        0x8BFDD1D9116DF76BULL, 0xE93116789DC2A1A7ULL, 0x7600DCE4326AA8DAULL, 0xC4564B38F9A4B6F1ULL, 
        0xF87860BE6C6C230ULL, 0x3FF1C8BF5E364A81ULL, 0x79A5D06DD40BABDDULL, 0x44EFF4B64BFED9BULL, 
        0xB27478F47859DF1DULL, 0xA7D36F21987C454BULL, 0x6A7D8CDA1355D9EBULL, 0x6550CB5149669C4AULL, 
        0x5A395F44062B7927ULL, 0x379CA8B2231EC094ULL, 0x6CF17D09BB847454ULL, 0xE1986C4991AEB0D2ULL, 
        0x25F1581E5AE7DD65ULL, 0xE3DBA68355329E14ULL, 0x308E132556C7CFB2ULL, 0x635F25253DF08F95ULL}, {
        0xF87AEFA5C24B03AFULL, 0xB6FF030F161FA82FULL, 0x4D69BA23EEEC9893ULL, 0xEA81983B2DA8F16DULL, 
        0xEB072038B4701C24ULL, 0xF375A0E3E9FCFC92ULL, 0xDEA1C3FBCBB7B94DULL, 0x6DAC6C383D1E1F39ULL, 
        0xAFD7F150BB64C1C8ULL, 0xDC7057DA47AFABCCULL, 0x4F9F2FC1A7E3B43BULL, 0xB23E2011D6B016EFULL, 
        0x79D01AC3EFC40248ULL, 0x87CB06F2DA51FEABULL, 0xE9FD41722B06A68AULL, 0xC76BA5F606793F8ULL, 
        0xC3C04A5526FC0F44ULL, 0xF8A072F532DF5C4FULL, 0xA98433975F93BABULL, 0x3C9C7427420F0039ULL, 
        0x2DC865A97BD1B0CBULL, 0xE51B3FEBC1CDB096ULL, 0xEBFBC7290D839F33ULL, 0x510D5CEAEE75E309ULL, 
        0x63DF639A221172CFULL, 0x5E8420A36D361F76ULL, 0x3214302A902F554CULL, 0x9DB0CD96593170C1ULL, 
        0xFCC12731E143ADFAULL, 0xC0ECE8E1E2F3F7CULL, 0x21C67733FFFEBAB5ULL, 0x310100480826A8DDULL, 
        0x554990C4983A7891ULL, 0x4BA23DB65E3A8033ULL, 0x3F198C1FB3A1C87AULL, 0x4F75515B44E6BE3DULL, 
        0x2CB148DDAB9717E4ULL, 0xF05E3249E24D1FCAULL, 0xB47CEDC21587CB92ULL, 0x30C9568D6EE67B63ULL, 
        0xD1D6DA7FF4C0AC2FULL, 0x9B4A7446C2F75727ULL, 0xD7511F99E445E4A9ULL, 0xE3E5C8EFF6F7AAF4ULL, 
        0x323A336BA9AC7E43ULL, 0x58C7436F66D10116ULL, 0xA3E5DDBF27EF52C0ULL, 0x4ED6001DA22ED6A6ULL, 
        0xF6C0813B9BE08322ULL, 0x300337D24E72C8A5ULL, 0x91DEEFB7FE736AF0ULL, 0x9B0125D4DC4942D2ULL, 
        0xB9F35569A94B0792ULL, 0x3F93E7B93BD47D8DULL, 0x5256B578D9CD5C11ULL, 0xB6141B01969A75DFULL, 
        0x630BDA73A3566ECDULL, 0x4595790ED4E3C57CULL, 0x2A524365CA143D19ULL, 0x67040A2329EC9F60ULL, 
        0xDFC7CC27516FEC11ULL, 0x2F3722F11BE08387ULL, 0x30E089F5763A79B3ULL, 0x8BB4C9B4A5491C47ULL}, {
        0xE6449E79F5B7C483ULL, 0xA75D986E2C999513ULL, 0x7CD6FF6B950B3837ULL, 0x843C0636827623F0ULL, 
        0x8244E71B00527D85ULL, 0x2DB214105915C4B9ULL, 0x561113F7BA3149AAULL, 0x13CA73438A896EFDULL, 
        0xE1E3DB9F30211AA7ULL, 0x85ED3D2C543DBC84ULL, 0x55FBE6102B432E16ULL, 0x65833DE2027AA380ULL, 
        0x8B10C3CAB891E0E7ULL, 0xADFBBA74BF90C371ULL, 0x32FB736B5A9D0CE7ULL, 0x3B4E2E26691EC783ULL, 
        0x53B63D20E6916D36ULL, 0xDA3C20E412795523ULL, 0x1C9420C05050E605ULL, 0x36DC80C05E615EF8ULL, 
        0x673987757CDF9EAULL, 0x549F1920D89BD701ULL, 0x9B0C4C977FB306E2ULL, 0x75E8303D5FA0DCFFULL, 
        0x77A471EBAA685D7CULL, 0x6E33A667892DE909ULL, 0xF0D0306849746E9ULL, 0x2B4344F6930B9A94ULL, 
        0x8EE6444F6B6EFC1BULL, 0xF71E15DE6D68D1E3ULL, 0x786FFF1634DAFA12ULL, 0xEADBA4A76B00BCB5ULL, 
        0xB19EED10A4E96036ULL, 0xFF60474EA8D9E74AULL, 0xD7064797B22BA2E7ULL, 0xA8B13C3C8DEB8EEFULL, 
        0x8CB15A9BC4875007ULL, 0x7EAFB1C41CCEA0EBULL, 0x3661673F6985FDF9ULL, 0xFDC7EBC47F8238E3ULL, 
        0xED22EDC0AFCF938BULL, 0xE40A16F7B150A4DCULL, 0x4687A679BF6BE170ULL, 0x55CC511DF9D52CC3ULL, 
        0xB91AA8DEBB16BF0EULL, 0x18B8D7DF8DFBE779ULL, 0x2CD8E755AFC12E0ULL, 0x44EBCA1D3D63D310ULL, 
        0x40F4C4690E86D22DULL, 0x406CBBEC8273DBB9ULL, 0xEC26F8D8D3B7D043ULL, 0x3E7E794385788FDAULL, 
        0x35F6B94938F54F4FULL, 0x5CC2D8BB28B7FE50ULL, 0xFD45D10B3085D7EAULL, 0x1ABD5F935CEE791EULL, 
        0x7351A58A7B0CD4D9ULL, 0x241F7C06BE00D2B8ULL, 0x945F5FC22864AD1BULL, 0x230D60F697D6E7FAULL, 
        0xCC856DD718F0AC35ULL, 0x81FBB1D8D704AB07ULL, 0x7F5A9C749F68719ULL, 0x817AFCE3BED383F5ULL}, {
        0x16EB90862C2F0DBAULL, 0x6313184EF356BE40ULL, 0x98979A9E72D3535DULL, 0x7878E9B9C4EB8661ULL, 
        0x8A0E6477FFF285FCULL, 0x22F8A6D2B5FF1432ULL, 0xE4CCA72DAC7B6581ULL, 0xECC0E280D3941795ULL, 
        0xC1F6BD5E1E8999F1ULL, 0x411ED350E3EACAE6ULL, 0xA3876C0E09044E57ULL, 0x7D6881D4F1A54B8AULL, 
        0xA6AB659258657FB8ULL, 0x3FA2AB694E1CE516ULL, 0xF59515A1109FAB3EULL, 0x32637E18CF62E6C0ULL, 
        0x9A04814D2E1CAF47ULL, 0xB89A69384E431E27ULL, 0xD9C40A50A08C5BA4ULL, 0x3FCB4E6868224804ULL, 
        0x74438EE158C1B158ULL, 0x5DCAAF7515C5A5D4ULL, 0x1526538C138ED37EULL, 0x96F9CEA4993CCE2BULL, 
        0xA72E5A5A75AEC4DEULL, 0xF5082D8E9BE29D95ULL, 0xA435A71176306A73ULL, 0x4CD14FC24A537B31ULL, 
        0x872F4FE3D404AD4EULL, 0x14566B2FCC195BFBULL, 0x48EBEA1A63BF6624ULL, 0xF4AF16016812344DULL, 
        0x85DF6E2A7BB23F98ULL, 0xE05CBA637F74FDDDULL, 0xA777A0407ADB62B1ULL, 0x3AED04CB99CFD391ULL, 
        0x64E16AA2A37C8A94ULL, 0x7EE19DA28BA0D1CFULL, 0x3F616396FF8689A2ULL, 0x2F2934A3CEB73393ULL, 
        0xF23561CCD51A6270ULL, 0x269824A415513BF7ULL, 0x2A6F525D15098082ULL, 0xE98CFC151813C109ULL, 
        0x1E8D5048BCFB1B3BULL, 0xBABD6699424250E3ULL, 0x7B4638535963DAAAULL, 0x6A0542759F213F4FULL, 
        0xA3C7A338C53102D7ULL, 0x99BCBD002ECB39DCULL, 0xA9C529D6BCB875EBULL, 0x2F9CC9AF1052A81CULL, 
        0x9558EF06B9149604ULL, 0x1619F188B042E664ULL, 0xD62813122605F36EULL, 0x7959EE6F79CF5DE9ULL, 
        0x73B747E96E151C30ULL, 0x3F1CC6609F99E478ULL, 0xEA13A60643EF3A2BULL, 0xE4BCC1C05ED355CFULL, 
        0xE3231AA916F24ACEULL, 0x66ECB858EE91E16AULL, 0xD51AEF037EDA19A6ULL, 0x38B04B1B8C20D396ULL}, {
        0x3292C1ECCFAFAF54ULL, 0xA6C05A29BA4AECB2ULL, 0x59152BD44F461409ULL, 0xC29FCEA32068B90BULL, 
        0x5B08C3880B890C98ULL, 0x213A2D86BCE0E6A4ULL, 0x5C362827CDD693C7ULL, 0x85F13A041470B2B7ULL, 
        0xC1D187A6CEE19594ULL, 0xB33C93DDB5A13D35ULL, 0x863EAE68E5CFF512ULL, 0x53D10CD39877DB6BULL, 
        0x815431D507A82A54ULL, 0xC24DDBF684DC35A8ULL, 0x4EC181C757B4A827ULL, 0xAA8D281A7F503B6CULL, 
        0xBED410B8BF49F3B9ULL, 0x8F8646D9D27F20A4ULL, 0x4ACCF82211F7B923ULL, 0xAE93CE89BC6C834DULL, 
        0xCA57521888E37532ULL, 0xEEEF09DAA50864A4ULL, 0x1B5AAAF0D57AA68EULL, 0x6FE39BEFB0D1ECAULL, 
        0x9DB89CAF742858E3ULL, 0x2CEE27CD3E0F8BEAULL, 0x6DF367BFBBF71D7AULL, 0x2B4757CC2A37CEBDULL, 
        0x9C40B699E80B5AEULL, 0x253EC5E0B249411EULL, 0x1007AAADFEF795C7ULL, 0x14973C86B232E5D9ULL, 
        0x3D81025004FF2919ULL, 0x7E90B19FEB7A06EDULL, 0x81E121AC51AEBEE3ULL, 0xBB414CCC8F0C0B61ULL, 
        0x5C61918C86C045B4ULL, 0x7EDBC55C2E355617ULL, 0xB2627AEE636EDA78ULL, 0x1B963A1259C24CECULL, 
        0xE1A9FC1E0BCC2BE9ULL, 0xDEACF9D0CF21AEC3ULL, 0x9F79F3036E0AD0D3ULL, 0xE127DDEB87A6184FULL, 
        0x72F730562D2668D3ULL, 0x867B5ADCA02A2F1DULL, 0x5446A8DECA732A13ULL, 0x8A3CE1F73E7CE4FCULL, 
        0x75103E2051977C50ULL, 0x1D1A88B205B2E3CAULL, 0x2C979206FD097131ULL, 0x34D4151C37397370ULL, 
        0x4EED46301848102ULL, 0x5A92E7E9E55691F9ULL, 0xD506F60FA9EE31A0ULL, 0xF0A7AD473CB50F83ULL, 
        0x716FAFC2352171EEULL, 0xAD562C5581C88326ULL, 0x812E7FB5ECE8492FULL, 0x1B6B367D248FAB7ULL, 
        0x81B5709EF1C73E3CULL, 0xBB351F57AE42DE76ULL, 0xA6569B03B40FAFA0ULL, 0xDE7D0F078BCC4D87ULL}}};

        static constexpr uint64_t ztk = 0x21C7289B43F4CD69ULL;

        static constexpr char posChars[21] = 
        {'/', '1', '2', '3', '4', '5', '6', '7', '8',
            'k', 'r', 'n', 'q', 'b', 'p', 'K', 'R', 'N', 'Q', 'B', 'P'};

        static constexpr char names[14] = 
        {'k', 'r', 'n', 'q', 'b', 'p', 'x',
			'K', 'R', 'N', 'Q', 'B', 'P', 'X'};

        static constexpr int mIndx[5] = {0, 9, 24, 33, 38};
        /* stilted-27-mob2
        int mobVals[43] =
        {-20, -10, 0, 0, 0, 0, 0, 0, 0, 
        -25, -20, -15, -10, -5, 0, 0, 0, 0, 5, 10, 15, 15, 20, 25,
        -20, -15, -10, -5, 0, 5, 10, 20, 30,
        -15, -10, 0, 5, 10,
        -10, -5, 0, 5, 10};

        int mobValsE[43] = 
        {-50, -40, -20, -10, 0, 10, 20, 30, 35,
        -40, -30, -20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40,
        -40, -30, -10, 0, 10, 20, 25, 30, 35,
        -15, -10, 0, 5, 10,
        -10, -5, 0, 5, 10};

        int mps[6][64] = 
        {{-38, -55, -15, -5, -5, -15, -25, -35, 
        -55, -18, 15, 15, 15, 15, 5, -25, 
        -45, -8, 18, 11, 0, 25, 12, -34, 
        -40, -5, 4, 0, 0, 22, 25, -10, 
        -6, -5, 2, 0, 0, 0, 14, -33, 
        -10, 15, 9, 15, 25, 7, 20, -12, 
        -16, 15, 10, 9, 4, 15, 15, -21, 
        -26, -45, -5, 2, 5, -5, -15, -32},

        {15, 5, -15, -15, -15, -15, -14, 15, 
        2, 15, 39, 15, 17, 26, 15, 28, 
        -5, 3, -15, -15, -15, 9, 1, 11, 
        -4, -8, 15, 15, -15, 15, -6, -11, 
        0, 15, -15, 1, -15, 14, 15, -2, 
        0, 15, 15, -15, 15, -8, 14, -4, 
        -30, -15, -15, -15, -15, 12, -2, -30, 
        -15, -15, 23, 15, 15, 16, 15, -15},

        {-65, -50, -15, -15, -45, -31, -46, -64, 
        -55, -5, -25, -15, 15, -21, -5, -55, 
        -32, -10, 20, -5, -3, 21, 2, -39, 
        -5, 10, 0, 5, 31, 0, 19, -5, 
        -5, 19, 0, 21, 34, 19, -10, -15, 
        -35, 15, -5, 25, 22, 0, 15, -45, 
        -28, -35, -20, -11, 10, -14, -35, -41, 
        -38, -25, -15, -41, -43, -21, -25, -65},

        {-30, -50, -23, -34, -15, -45, -50, -55, 
        -18, 12, -10, -5, -5, -9, -15, -42, 
        -29, 9, 8, 5, 7, 5, 14, -5, 
        -30, 1, 25, 15, 44, 5, 15, -30, 
        -14, -10, 0, 43, 15, 29, 19, -25, 
        -5, -6, -5, 5, 19, 5, -10, -18, 
        -35, -25, -7, 0, 0, -13, -17, -45, 
        -38, -35, -15, -39, -25, -27, -50, -40},

        {0, 0, 0, 0, 0, 0, 0, 0, 
        -10, 0, 0, 15, -5, 0, 0, -10, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 5, 15, 0, 0, 19, 5, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        -15, 0, 0, -5, -5, 0, 0, 7, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, -35, -32, 0, 0, -13, -35, 0},

        {0, 0, 0, 0, 0, 0, 0, 0, 
        6, 5, 12, 15, 15, 10, 10, 5, 
        0, 4, 3, 13, 13, 4, 3, 0, 
        10, -5, -3, 36, 10, 16, -6, -7, 
        -3, -3, 17, 31, 30, 19, -3, -3, 
        0, 4, 27, 35, 19, 15, 1, -1, 
        -20, -25, -10, -15, -15, -19, -25, -20, 
        0, 0, 0, 0, 0, 0, 0, 0}};

        int eps[6][64] = 
        {{-85, -77, -65, -55, -55, -65, -75, -85, 
        -83, -25, -15, -5, -5, -15, -25, -75, 
        -65, -15, 30, 20, 20, 30, -15, -65, 
        -55, -5, 23, 55, 55, 24, -5, -55, 
        -63, -5, 20, 55, 55, 33, -5, -55, 
        -65, -15, 23, 22, 43, 21, -15, -65, 
        -75, -25, -15, -5, -5, -15, -25, -75, 
        -85, -92, -65, -56, -55, -65, -75, -85},

        {15, 6, -14, -12, 10, -13, -15, 15, 
        -10, -5, -2, -4, -3, 1, -5, 11, 
        -15, -15, -15, -15, -15, -15, -13, -15, 
        10, 15, -9, 5, -15, -5, -15, -6, 
        10, 15, -15, -15, -15, -4, 7, 10, 
        10, -13, 2, 12, 15, -5, 13, 10, 
        -10, 8, -15, -15, -14, -15, -14, -20, 
        5, 0, 20, -2, 18, -5, 3, 5},

        {-65, -27, -15, -16, -45, -19, -28, -36, 
        -54, -5, -25, -15, 15, -12, -8, -55, 
        -45, 12, 25, -5, -4, -4, -8, -45, 
        -5, -6, 21, 5, 6, 0, 20, -34, 
        -6, 19, 1, 5, 6, 10, 8, -13, 
        -45, 15, -5, 14, -5, 19, 11, -15, 
        -42, -31, -24, 0, 14, -14, -16, -25, 
        -36, -25, -31, -40, -15, -15, -25, -56},

        {-25, -50, -37, -40, -40, -45, -50, -55, 
        -16, 12, -10, -5, -5, -10, -15, -40, 
        -19, -10, -5, 5, 5, 5, 16, -5, 
        -25, 1, -5, 5, 5, 5, 12, -30, 
        -25, -10, 0, 5, 5, 0, 19, -25, 
        -5, -9, -10, 5, 5, 5, -10, -5, 
        -45, -17, -15, 0, 0, -15, -25, -16, 
        -26, -35, -15, -40, -38, -45, -50, -40},

        {0, 0, 0, 0, 0, 0, 0, 0, 
        -10, 0, 0, -2, -5, 0, 0, -10, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, 5, 15, 0, 0, 15, 5, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        -4, 0, 0, -5, -5, 0, 0, 3, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, -27, -26, 0, 0, -29, -35, 0},

        {0, 0, 0, 0, 0, 0, 0, 0, 
        27, 5, 11, 15, 15, 10, 10, 5, 
        15, 4, 3, 13, 13, 4, 3, 0, 
        -4, -5, 6, 10, 10, -5, -6, -7, 
        -3, -3, 5, 10, 10, 5, -3, -3, 
        0, 1, 2, 23, 28, 1, 0, -1, 
        -20, -25, -8, -15, -15, -5, -25, -18, 
        0, 0, 0, 0, 0, 0, 0, 0}};
        */

        int mps[6][64] =
        {{-27, -44, -4, 6, 6, -4, -14, -24, 
        -44, -7, 26, 26, 26, 4, 4, -14, 
        -34, 3, 7, 0, -3, 26, 23, -23, 
        -29, -16, 4, -11, -11, 33, 36, 1, 
        -17, 6, -9, -11, -11, 11, 22, -22, 
        1, 4, 7, 4, 14, -4, 31, -1, 
        -5, 16, 20, 9, 5, 20, 26, -10, 
        -29, -34, -5, 13, 16, 6, -13, -21},

        {26, 7, -4, -4, -4, -4, -5, 26, 
        13, 26, 48, 13, 28, 37, 26, 39, 
        6, 14, -4, -4, -8, 20, 9, 13, 
        7, -5, 26, 26, -4, 26, 5, 0, 
        11, 4, -4, 10, -4, 25, 4, -13, 
        6, 9, 5, -4, 4, -19, 3, 7, 
        -19, -26, -11, -21, -4, 2, -13, -19, 
        -5, -4, 12, 19, 23, 13, 6, -6},

        {-71, -61, -26, -26, -34, -42, -46, -53, 
        -66, -16, -14, -26, 4, -10, -16, -44, 
        -43, -11, 9, -16, -14, 10, -9, -45, 
        -6, -1, 11, 8, 27, 11, 18, -16, 
        6, 15, 10, 16, 23, 22, -21, -4, 
        -24, 6, 6, 26, 20, 2, 4, -34, 
        -26, -24, -9, 0, -1, -5, -24, -30, 
        -49, -14, -4, -30, -32, -18, -14, -54},

        {-41, -39, -12, -45, -22, -34, -39, -66, 
        -29, 1, -21, -16, 0, -20, -16, -31, 
        -40, -2, -3, -1, -4, 16, 3, -16, 
        -19, -10, 36, 4, 51, -6, 4, -19, 
        -3, -13, 11, 51, 4, 18, 8, -14, 
        0, 5, 6, -6, 22, -6, 1, -13, 
        -46, -14, 4, -11, 11, -5, -6, -34, 
        -27, -46, -14, -28, -14, -16, -39, -40},

        {0, 0, 0, 0, 0, 0, 0, 0, 
        -21, 0, 0, 4, -16, 0, 0, -21, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, -6, 4, 0, 0, 8, -6, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        -15, 0, 0, -16, -16, 0, 0, -4, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, -46, -21, 0, 0, -20, -24, 0},

        {0, 0, 0, 0, 0, 0, 0, 0, 
        -5, -6, 1, 4, 17, 21, -1, 16, 
        -11, -2, -8, 2, 2, -7, -8, -11, 
        -1, -1, 8, 25, -1, 5, -17, -18, 
        -4, 2, 14, 20, 27, 8, -7, -14, 
        -11, 13, 16, 36, 12, 13, -2, -12, 
        -21, -14, -4, -4, -4, -8, -14, -24, 
        0, 0, 0, 0, 0, 0, 0, 0}};

        int eps[6][64] =
        {{-74, -66, -54, -44, -44, -54, -64, -74, 
        -72, -14, -4, 6, 6, -4, -14, -64, 
        -54, -4, 19, 9, 9, 19, -4, -54, 
        -44, 6, 30, 44, 44, 19, 6, -44, 
        -52, 6, 9, 44, 44, 22, 6, -44, 
        -54, -13, 12, 17, 32, 20, -4, -54, 
        -64, -21, -19, 6, 5, -4, -14, -64, 
        -74, -81, -54, -45, -44, -54, -64, -88},

        {26, 15, -3, -1, 21, -2, -4, 26, 
        1, 6, -2, 7, 7, -10, 6, 8, 
        -4, -14, -4, -4, -15, -4, -10, -16, 
        21, 26, 2, 16, -4, 6, -4, 5, 
        6, 4, -4, -26, -4, -9, -4, 21, 
        4, -2, 6, 15, 4, -14, 2, 18, 
        1, 11, -4, -14, -3, -24, -9, -9, 
        16, 11, 9, 9, 19, -12, 5, 16},

        {-55, -34, -26, -27, -37, -30, -28, -25, 
        -65, -16, -14, -26, 4, -1, -19, -44, 
        -39, 1, 14, -16, -15, -10, -19, -36, 
        -16, -17, 16, -6, -2, 6, 9, -23, 
        -4, 8, 8, -6, -5, -1, -2, -4, 
        -34, 11, 6, 4, -16, 8, 0, -4, 
        -32, -20, -13, 11, 3, -25, -5, -36, 
        -25, -14, -20, -29, -4, -4, -33, -45},

        {-36, -53, -38, -46, -51, -36, -39, -62, 
        -27, 1, -21, -16, -16, -3, -26, -29, 
        -30, -21, -16, -6, -6, -6, 5, -16, 
        -14, -10, -16, -6, -6, -6, 1, -33, 
        -14, -1, -11, -6, -6, -11, 8, -14, 
        -14, -20, -11, -6, -6, -6, -13, 4, 
        -56, -16, -4, -11, 11, -26, -14, -5, 
        -35, -46, -14, -29, -37, -34, -39, -40},

        {0, 0, 0, 0, 0, 0, 0, 0, 
        -13, 0, 0, -13, -16, 0, 0, -21, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, -6, 4, 0, 0, 4, -6, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        1, 0, 0, -16, -16, 0, 0, -8, 
        0, 0, 0, 0, 0, 0, 0, 0, 
        0, -38, -15, 0, 0, -18, -24, 0},

        {0, 0, 0, 0, 0, 0, 0, 0, 
        29, -6, 0, 4, 4, 3, 11, 16, 
        4, -7, -8, 2, 2, -7, 14, -11, 
        -15, -3, -5, -1, -1, -16, -2, 4, 
        -14, -14, -6, -1, 13, -6, -7, -14, 
        0, -10, -1, 16, 17, 0, -11, -12, 
        -30, -14, 3, -4, -4, 3, -14, -7, 
        0, 0, 0, 0, 0, 0, 0, 0}};

        int mobVals[43] = 
        {-14, 1, 11, -1, -4, -3, -11, -11, -11, 
        -24, -9, -4, -6, -4, 0, 6, 3, 1, 4, 21, 26, 9, 22, 14, 
        -9, -6, 0, -1, 3, 16, 21, 9, 19, 
        -5, -8, -11, -4, -1, 
        -21, -15, -11, -6, -1};

        int mobValsE[43] = 
        {-39, -29, -9, 1, -4, 3, 9, 19, 24, 
        -51, -27, -15, -4, 1, 6, 11, 16, 21, 26, 31, 29, 41, 31, 29, 
        -29, -41, -10, 11, 21, 19, 14, 19, 24, 
        -4, -9, -11, -6, -1, 
        -21, -16, -10, -6, -1};
                
        Position();

        int countReps(int);
        int evaluate();
        int evaluateScratch();

        void beginAttacks(bool);
        void beginMobility(bool);

        int* availableMobs();

        void setStartPos();
        int fullMoveGen(int, bool);
        uint64_t perft(int, int);

        //int moveEval(Move); 
        void makeMove(Move, bool);
        void unmakeMove(Move, bool);
        void passMove();
        void unpassMove();

        void sendMove(std::string);

        void eraseHistoryTable();
        void beginZobristHash();
        
        int halfMoveCount();
        void readFen(std::string);
        std::string makeFen();

        std::string makeOpening(int);

        //static void initZobristKeys();
};